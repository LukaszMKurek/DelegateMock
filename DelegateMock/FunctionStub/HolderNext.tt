<#@ template debug="false" language="C#" #>
<#@ assembly name="$(SolutionDir)\TemplateHelpers\bin\TemplateHelpers.dll" #>
<#@ import namespace="TemplateHelpers" #>
using System;
using System.Collections.Generic;
using System.Linq;

namespace DelegateMock.FunctionStub
{
<#T4Helper.ForEachInRange(1, 16, (i, _) => {#>
   public sealed class HolderNext<<#=_("TP#", ", ")#>TRet> : IHolderNext<<#=_("TP#", ", ")#>TRet>
   {
      public HolderNext(Node<<#=_("TP#", ", ")#>TRet> node, Func<<#=_("TP#", ", ")#>bool> filter)
      {
         _node = node;
         _filter = filter;
      }

      private readonly Node<<#=_("TP#", ", ")#>TRet> _node;
      Node<<#=_("TP#", ", ")#>TRet> IHolderNext<<#=_("TP#", ", ")#>TRet>.Node
      {
         get { return _node; }
      }

      private readonly Func<<#=_("TP#", ", ")#>bool> _filter;
      Func<<#=_("TP#", ", ")#>bool> IHolderNext<<#=_("TP#", ", ")#>TRet>.Filter
      {
         get { return _filter; }
      }
   }

<#});#>
}
