<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#+
   public static class TemplateGeneratorHelper
   {
      public static void ForEach(Action<string, string, string, string, string, string, string> action)
      {
         //action("", "", "", "", "", "", "");

         var tpList = new List<string>(16);
         var pList = new List<string>(16);
         var tppList = new List<string>(16);
         var tppList2 = new List<string>(16);

         for (int i = 1; i <= 16; i++)
         {
            tpList.Add("TP" + i);
            pList.Add("p" + i);
            tppList.Add("TP" + i + " p" + i);
            tppList2.Add("TP" + i + " a" + i);

            string templateParametersWithComa = string.Join(", ", tpList) + ", ";
            string templateParametersWithBracked = "<" + string.Join(", ", tpList) + ">";
            string parameters = string.Join(", ", pList);
            string parametersWithComa = parameters + ", ";
            string parametersWithType = string.Join(", ", tppList);
            string parametersWithTypeAndComa = parametersWithType + ", ";
            string parametersWithTypeA = string.Join(", ", tppList2);

            action(templateParametersWithComa, templateParametersWithBracked, parameters, parametersWithComa, parametersWithType, parametersWithTypeAndComa, parametersWithTypeA);
         }
      }
   }
#>