<#@ template debug="false" language="C#" #>
<#@ assembly name="$(SolutionDir)\TemplateHelpers\bin\TemplateHelpers.dll" #>
<#@ import namespace="TemplateHelpers" #>
using System;
using System.Collections.Generic;
using System.Linq;

namespace DelegateMock.FunctionStub
{
// ReSharper disable TypeParameterCanBeVariant

<#T4Helper.ForEachInRange(1, 16, (i, _) => {#>
   public interface IHolderNext<<#=_("TP#", ", ")#>TRet>
   {
      Node<<#=_("TP#", ", ")#>TRet> Node { get; }
      Func<<#=_("TP#", ", ")#>bool> Filter { get; }
   }

<#});#>
// ReSharper restore TypeParameterCanBeVariant
}
